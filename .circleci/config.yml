version: 2.1

aliases:
  - &workspace_root ~/workspace
  - &ci_node_image circleci/node:lts

  - &attach_workspace
    at: *workspace_root

  - &persist_to_workspace
    root: .
    paths:
      - .

  - &save_js_packages
    key: js-packages-v1-{{ .Branch }}-{{ checksum "/home/circleci/project/package-lock.json" }}-{{ checksum "/home/circleci/project/packages/configs/package-lock.json" }}-{{ checksum "/home/circleci/project/packages/components/package-lock.json" }}-{{ checksum "/home/circleci/project/packages/storybook/package-lock.json" }}-{{ checksum "/home/circleci/project/packages/theme/package-lock.json" }}-{{ checksum "/home/circleci/project/packages/icons/package-lock.json" }}
    paths:
      - /home/circleci/.npm

  - &restore_js_packages
    keys:
      - js-packages-v1-{{ .Branch }}-{{ checksum "/home/circleci/project/package-lock.json" }}-{{ checksum "/home/circleci/project/packages/configs/package-lock.json" }}-{{ checksum "/home/circleci/project/packages/components/package-lock.json" }}-{{ checksum "/home/circleci/project/packages/storybook/package-lock.json" }}-{{ checksum "/home/circleci/project/packages/theme/package-lock.json" }}-{{ checksum "/home/circleci/project/packages/icons/package-lock.json" }}
      - js-packages-v1-{{ .Branch }}-
      - js-packages-v1-

orbs:
  docker-image: t3n/docker-image@1.0
  kubr: t3n/kubr@1.0

jobs:
  checkout_and_build:
    docker:
      - image: *ci_node_image
    resource_class: large
    steps:
      - checkout
      - restore_cache: *restore_js_packages

      - run:
          name: node version control
          command: npm -v && node -v

      - run:
          name: npm install
          command: npm ci --legacy-peer-deps
          no_output_timeout: 20m

      - run: |
          npm run build

      - save_cache: *save_js_packages
      - persist_to_workspace: *persist_to_workspace
      - store_artifacts:
          path: packages/components/dist/report

  prettier:
    working_directory: *workspace_root
    docker:
      - image: *ci_node_image
    resource_class: small
    steps:
      - attach_workspace: *attach_workspace
      - run: npm run prettier:check

  lint:
    working_directory: *workspace_root
    docker:
      - image: *ci_node_image
    resource_class: small
    steps:
      - attach_workspace: *attach_workspace
      - run: npm run lint:theme
      - run: npm run lint:icons
      - run: npm run lint:components
      - run: npm run lint:storybook

  test:
    working_directory: *workspace_root
    docker:
      - image: *ci_node_image
    resource_class: medium
    steps:
      - attach_workspace: *attach_workspace
      - run: npm run test -- --runInBand

  docker_build_and_push:
    working_directory: *workspace_root
    docker:
      - image: google/cloud-sdk
    resource_class: large
    steps:
      - attach_workspace: *attach_workspace
      - setup_remote_docker
      - docker-image/gcr-build-and-push:
          image: storybook

  publishPatch:
    working_directory: *workspace_root
    docker:
      - image: *ci_node_image
    resource_class: small
    steps:
      - attach_workspace: *attach_workspace
      - add_ssh_keys:
          fingerprints:
            - '13:fe:84:a1:b8:4a:45:b3:97:6d:16:ff:de:09:b2:11'
      - run: git config user.email "circleci@t3n.de"
      - run: git config user.name "CircleCI Bot"
      - run: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: ./node_modules/.bin/lerna publish patch --no-verify-access --ignore-scripts --no-git-reset --yes

  publishMinor:
    working_directory: *workspace_root
    docker:
      - image: *ci_node_image
    resource_class: small
    steps:
      - attach_workspace: *attach_workspace
      - add_ssh_keys:
          fingerprints:
            - '13:fe:84:a1:b8:4a:45:b3:97:6d:16:ff:de:09:b2:11'
      - run: git config user.email "circleci@t3n.de"
      - run: git config user.name "CircleCI Bot"
      - run: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: ./node_modules/.bin/lerna publish minor --no-verify-access --ignore-scripts --no-git-reset --yes

  publishMajor:
    working_directory: *workspace_root
    docker:
      - image: *ci_node_image
    resource_class: small
    steps:
      - attach_workspace: *attach_workspace
      - add_ssh_keys:
          fingerprints:
            - '13:fe:84:a1:b8:4a:45:b3:97:6d:16:ff:de:09:b2:11'
      - run: git config user.email "circleci@t3n.de"
      - run: git config user.name "CircleCI Bot"
      - run: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: ./node_modules/.bin/lerna publish major --no-verify-access --ignore-scripts --no-git-reset --yes

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_and_build:
          filters:
            branches:
              ignore: /dependabot.*/
            tags:
              ignore: /.*/
      - prettier:
          requires:
            - checkout_and_build
      - lint:
          requires:
            - checkout_and_build
      - test:
          requires:
            - checkout_and_build
      - docker_build_and_push:
          filters:
            branches:
              only:
                - master
          context: google
          requires:
            - prettier
            - lint
            - test
      - kubr/deploy:
          deployment: Live
          filters:
            branches:
              only:
                - master
          context: kubr
          requires:
            - docker_build_and_push

      - publishPatchApproval:
          type: approval
          requires:
            - docker_build_and_push
          filters:
            branches:
              only:
                - master

      - publishPatch:
          filters:
            branches:
              only:
                - master
          requires:
            - publishPatchApproval

      - publishMinorApproval:
          type: approval
          requires:
            - docker_build_and_push
          filters:
            branches:
              only:
                - master

      - publishMinor:
          filters:
            branches:
              only:
                - master
          requires:
            - publishMinorApproval

      - publishMajorApproval:
          type: approval
          requires:
            - docker_build_and_push
          filters:
            branches:
              only:
                - master

      - publishMajor:
          filters:
            branches:
              only:
                - master
          requires:
            - publishMajorApproval

  build_and_push_feature:
    jobs:
      - push_feature:
          type: approval
          filters:
            branches:
              only:
                - /feature.*/
      - checkout_and_build:
          filters:
            branches:
              only:
                - /feature.*/
          requires:
            - push_feature
      - docker_build_and_push:
          filters:
            branches:
              only:
                - /feature.*/
          context: google
          requires:
            - checkout_and_build
  build_and_test_dependabot:
    jobs:
      - hold:
          type: approval
          filters:
            branches:
              only: /dependabot.*/
      - checkout_and_build:
          requires:
            - hold
      - prettier:
          requires:
            - checkout_and_build
      - lint:
          requires:
            - checkout_and_build
      - test:
          requires:
            - checkout_and_build
