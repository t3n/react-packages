{
  "name": "t3n-react-packages",
  "version": "0.1.0",
  "description": "",
  "author": "",
  "license": "ISC",
  "repository": {
    "type": "git",
    "url": "https://github.com/t3n/react-packages"
  },
  "devDependencies": {
    "@babel/cli": "^7.18.10",
    "@babel/core": "^7.19.0",
    "@babel/plugin-transform-runtime": "^7.18.10",
    "@babel/preset-env": "^7.19.0",
    "@babel/preset-react": "^7.18.6",
    "@babel/preset-typescript": "^7.18.6",
    "@t3n/eslint-config": "^6.0.2",
    "@t3n/eslint-config-react": "^6.0.2",
    "@t3n/eslint-config-typescript": "^6.0.2",
    "@testing-library/react": "^12.1.5",
    "@types/jest": "^29.0.0",
    "@typescript-eslint/eslint-plugin": "^5.36.2",
    "@typescript-eslint/parser": "^5.36.2",
    "babel-jest": "^29.0.2",
    "babel-loader": "^8.2.5",
    "babel-plugin-polished": "^1.1.0",
    "babel-plugin-styled-components": "^2.0.2",
    "buffer": "^6.0.3",
    "core-js": "^3.25.0",
    "crypto-browserify": "^3.12.0",
    "eslint": "^8.23.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-loader": "^4.0.2",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-jest": "^27.0.1",
    "eslint-plugin-jsx-a11y": "^6.6.1",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-react": "^7.31.7",
    "eslint-plugin-react-hooks": "^4.3.0",
    "eslint-plugin-simple-import-sort": "^8.0.0",
    "eslint-webpack-plugin": "^3.2.0",
    "file-loader": "^6.2.0",
    "fork-ts-checker-webpack-plugin": "^7.2.13",
    "jest": "^29.0.2",
    "jest-environment-jsdom": "^29.0.2",
    "jest-styled-components": "^7.1.1",
    "jsdom": "^20.0.0",
    "lerna": "^5.5.0",
    "npm-check": "^6.0.1",
    "prettier": "^2.5.1",
    "react-test-renderer": "^18.2.0",
    "regenerator-runtime": "^0.13.9",
    "source-map-loader": "^4.0.0",
    "ts-jest": "^28.0.8",
    "ts-loader": "^9.3.1",
    "ts-node-dev": "^2.0.0",
    "typescript": "^4.8.2",
    "url-loader": "^4.1.1",
    "webpack": "^5.74.0",
    "webpack-bundle-analyzer": "^4.6.1",
    "webpack-cli": "^4.8.0",
    "webpack-notifier": "^1.15.0"
  },
  "scripts": {
    "clean": "lerna run clean --parallel  && lerna clean --yes && rm -rf node_modules ",
    "prepare": "lerna clean --yes && lerna bootstrap --hoist",
    "start": "lerna run start --parallel",
    "build": "npm run build:theme && npm run build:icons && npm run build:components && npm run build:storybook",
    "test": "jest",
    "lint": "npm run lint:theme && npm run lint:icons && npm run lint:components && npm run lint:storybook",
    "start:components": "lerna run start --scope @t3n/components --stream",
    "build:components": "lerna run build --scope @t3n/components --stream",
    "test:components": "lerna run test --scope @t3n/components --stream",
    "lint:components": "eslint './packages/components/src/**'",
    "start:theme": "lerna run start --scope @t3n/theme --stream",
    "build:theme": "lerna run build --scope @t3n/theme --stream",
    "test:theme": "lerna run test --scope @t3n/theme --stream",
    "lint:theme": "eslint './packages/theme/src/**'",
    "start:icons": "lerna run start --scope @t3n/icons --stream",
    "build:icons": "lerna run build --scope @t3n/icons --stream",
    "lint:icons": "eslint './packages/icons/src/**'",
    "start:storybook": "lerna run start --scope @t3n/storybook --stream",
    "build:storybook": "lerna run build --scope @t3n/storybook --stream",
    "serve:storybook": "lerna run serve --scope @t3n/storybook --stream",
    "test:storybook": "lerna run test --scope @t3n/storybook --stream",
    "lint:storybook": "eslint './packages/storybook/src/**'",
    "prettier:format": "prettier --write 'packages/**/*.{ts,tsx,js,jsx}'",
    "prettier:check": "prettier --check 'packages/**/*.{ts,tsx,js,jsx}'",
    "upgrade-interactive": "npm-check --update && npm-check --update packages/components && npm-check --update packages/theme && npm-check --update packages/storybook && npm-check --update packages/configs && npm-check --update packages/icons",
    "codegen:watch": "npx apollo client:codegen --target=typescript --watch",
    "codegen:build": "npx apollo client:codegen --target=typescript"
  }
}
